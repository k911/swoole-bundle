language: php

cache:
  directories:
    - $HOME/.composer/cache
    - $HOME/pecl_cache

env:
  global:
    - COMPOSER_ARGS=install
    - SWOOLE_VERSION=4.3.1
    - CC_TEST_REPORTER_ID=77af0c58a2646fe49fb7df502c38a56560e074fbc8b3086f2d33032b44c885a8

matrix:
  include:
    - php: 7.2
    - php: 7.2
      env:
        - "COMPOSER_ARGS='update --prefer-lowest'"
    - php: 7.3
    - php: 7.3
      before_script:
        - >-
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
            > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build
      after_success:
        - composer merge-code-coverage
        - ./cc-test-reporter after-build -t clover --exit-code $TRAVIS_TEST_RESULT
        - bash <(curl -s https://codecov.io/bash)
      env:
        - COVERAGE=1
        - DEPLOY=1
    - php: 7.3
      env:
        - SWOOLE_LATEST=1
        - COMPOSER_ARGS=update

before_install:
  - export PATH="$PATH:$HOME/.composer/vendor/bin"
  - composer global require phwoolcon/ci-pecl-cacher
  - pecl update-channels
  - ci-pecl-install inotify
  - >-
      if [[ "$SWOOLE_LATEST" = "1" ]]; then
        ci-pecl-install swoole;
      else
        ci-pecl-install swoole-$SWOOLE_VERSION swoole skip-update;
      fi
  - php -r "echo swoole_version().PHP_EOL;"

install:
  - export COMPOSER_ARGS="$COMPOSER_ARGS --prefer-dist --no-progress --no-suggest --no-scripts --ansi"
  - echo "composer $COMPOSER_ARGS"
  - composer $COMPOSER_ARGS

script:
  - if [[ "$COVERAGE" != "1" ]]; then composer test; fi
  - if [[ "$COVERAGE" == "1" ]]; then composer analyse; fi
  - if [[ "$COVERAGE" == "1" ]]; then composer code-coverage; fi
  - bash ./tests/run-server-tests.sh

before_deploy:
  - >-
      export VERSION=$(git tag -l | sort -V -r | head -1 | sed -E 's/v(.*)/\1/')
      && echo "VERSION=${VERSION}"
  - yarn global add conventional-changelog-cli conventional-recommended-bump conventional-github-releaser

deploy:
  - provider: script
    skip_cleanup: true
    script: bash ./deploy/releaser.sh
    on:
      branch: master
      condition: $DEPLOY = 1
